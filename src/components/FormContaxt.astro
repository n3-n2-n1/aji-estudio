---
// Esto es el mismo código del formulario con el componente Container
import Container from "./Container.astro";
const stats = {
  title: "+650 Casos en LATAM",
  content: "Aquí puedes colocar alguna información relevante o estadísticas importantes.",
};
const avatars = [
  { name: 'Ryan Florence' },
  { name: 'Segun Adebayo' },
  { name: 'Kent Dodds' },
  { name: 'Prosper Otemuyiwa' },
  { name: 'Christian Nwamba' },
];

// Función para obtener las iniciales
const getInitials = (name) => {
  return name
    .split(" ")
    .map((n) => n[0].toUpperCase())
    .join("");
};
let showPopup = false; // Estado para manejar el popup
let showError = false; // Estado para manejar errores en el envío
---

<Container>
  <div class="relative" id="formulario">
    <div class="container grid grid-cols-1 md:grid-cols-2 gap-10 py-10 sm:py-20 lg:py-24 max-w-7xl">
      <div class="flex flex-col space-y-10 md:space-y-20 px-4">
        <h1 class="text-3xl sm:text-3xl md:text-5xl lg:text-6xl font-extrabold leading-none text-white z-20">
          Contactanos{' '}<br/>
          <span class="bg-clip-text text-white bg-gradient-to-r from-red-400 to-orange-400">
            Tu Caso
          </span>{' '}
          Nos Importa
        </h1>
        <div class="flex items-center space-x-4 z-20">
          <div class="flex -space-x-4">
            {avatars.map((avatar) => (
              <div key={avatar.name} class="relative flex items-center justify-center w-12 h-12 md:w-16 md:h-16 rounded-full border-2 border-white text-white font-bold bg-primary z-10">
                {getInitials(avatar.name)}
              </div>
            ))}
          </div>
          <span class="font-heading text-4xl text-white md:text-6xl">+</span>
          <div class="flex items-center justify-center font-heading text-sm md:text-lg bg-gray-800 text-white rounded-full min-w-[44px] min-h-[44px] md:min-w-[60px] md:min-h-[60px] relative">
            <div class="absolute inset-0 rounded-full bg-gradient-to-bl from-orange-400 to-yellow-400 transform scale-125 -z-10"></div>
            150
          </div>
        </div>
      </div>

      <div class="rounded-xl p-2  md:px-8 md:space-y-8 max-w-lg z-50">
        <div class="space-y-6">
          <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold leading-tight text-gray-800 sm: pb-6">
            <span class="bg-clip-text text-white">
              Estamos aquí, listos para escucharte!
            </span>
          </h2>
        </div>
        <form class="space-y-4" onsubmit="handleSubmit(event)">
          <input
            type="text"
            name="name"
            placeholder="Nombre Completo"
            class="w-full bg-gray-100 border-0 text-gray-500 p-3 rounded-lg placeholder-gray-500"
            required
          />
          <input
            type="email"
            name="email"
            placeholder="Email"
            class="w-full bg-gray-100 border-0 text-gray-500 p-3 rounded-lg placeholder-gray-500"
            required
          />
          <input
            type="tel"
            name="phone"
            placeholder="Número de contacto"
            class="w-full bg-gray-100 border-0 text-gray-500 p-3 rounded-lg placeholder-gray-500"
          />
          <textarea
            name="message"
            placeholder="Contanos tu caso"
            class="w-full bg-gray-100 border-0 text-gray-500 p-3 rounded-lg placeholder-gray-500"
            required
          ></textarea>
          <button
            type="submit"
            class="w-full font-heading mt-8 py-3 font-semibold rounded-full bg-primary text-white hover:bg-[#A6781D] shadow-xl"
          >
            Contactanos
          </button>
        </form>
      </div>
    </div>

    <!-- Popup de agradecimiento -->
    {showPopup && (
      <div class="fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50">
        <div class="bg-white p-6 rounded-lg shadow-lg text-center">
          <h2 class="text-2xl font-bold mb-4">¡Gracias por contactarnos!</h2>
          <p class="text-gray-700">Hemos recibido tu mensaje y nos pondremos en contacto contigo pronto.</p>
          <button class="mt-6 px-4 py-2 bg-primary text-white rounded-full" onclick="closePopup()">Continuar</button>
        </div>
      </div>
    )}

    <!-- Mostrar error si el envío falla -->
    {showError && (
      <div class="fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50">
        <div class="bg-white p-6 rounded-lg shadow-lg text-center">
          <h2 class="text-2xl font-bold mb-4 text-red-600">Error en el envío</h2>
          <p class="text-gray-700">Hubo un problema al enviar el formulario. Por favor, intenta nuevamente.</p>
          <button class="mt-6 px-4 py-2 bg-red-600 text-white rounded-full" onclick="closePopup()">Cerrar</button>
        </div>
      </div>
    )}

    <!-- SVG decorativo -->
    <div class="absolute top-[-1.5rem] left-[-1.5rem] blur-[70px]">
      <svg
        width="30%"
        height="560px"
        viewBox="0 0 528 560"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
      <circle cx="71" cy="61" r="111" fill="#B69126" /> <!-- Dorado principal -->
      <circle cx="244" cy="106" r="139" fill="#D4A02A" /> <!-- Dorado más brillante -->
      <circle cx="0" cy="291" r="139" fill="#A6781D" /> <!-- Dorado oscuro -->
      <circle cx="80.5" cy="189.5" r="101.5" fill="#B69126" /> <!-- Dorado principal -->
      <circle cx="196.5" cy="317.5" r="101.5" fill="#D4A02A" /> <!-- Dorado más brillante -->
      <circle cx="70.5" cy="458.5" r="101.5" fill="#B69126" /> <!-- Dorado principal -->
      <circle cx="426.5" cy="-0.5" r="101.5" fill="#A6781D" /> <!-- Dorado oscuro -->
      </svg>
    </div>
  </div>
</Container>

<script>
  function handleSubmit(event) {
    event.preventDefault();
    const formData = new FormData(event.target);

    fetch('/api/send-email', {
      method: 'POST',
      body: formData,
    })
    .then(response => {
      if (response.ok) {
        showPopup = true; // Mostrar el popup de agradecimiento
        showError = false;
      } else {
        showError = true; // Mostrar el error si ocurre un problema
      }
    })
    .catch(() => {
      showError = true; // Manejar error de red
    });
  }

  function closePopup() {
    showPopup = false; // Cerrar el popup
    showError = false;
  }
</script>
